import userlist
import finalUserList
import collect_tweets
import analysis


# Step 1: Get the lists for each political affiliation.
# get the list of followers of liberal president (moonriver365) and conservative president (GH_PARK)
moon_followers = userlist.get_followers(account_name='moonriver365')   #Moon followers on 2019-3-11
GH_followers = userlist.get_followers(account_name='GH_PARK')                   #PGH followers on 2019-3-11

# get the list of followers of liberal media (hanitweet) and conservative media (Chosun)
hank_followers = userlist.get_followers(account_name='hanitweet')               #Hankyoreh followers on 2019-3-11
chosun_followers = userlist.get_followers(account_name='Chosun')                #Chosun Ilbo followers on 2019-3-11

# Finalize user lists and output the lists.
# Changed to sets in order to remove duplicates and facilitate set operations such as intersection and complement..
# liberal users are those who follow liberal president and media but not conservative president and media
moon_set = set(moon_followers)
hank_set = set(hank_followers)
GH_set = set(GH_followers)
chosun_set = set(chosun_followers)

liberal_set = moon_set & hank_set
conservative_set = GH_set & chosun_set

liberal_set = liberal_set - conservative_set
conservative_set = conservative_set - liberal_set


# Step 2: exclude users who have less than 50 followers or higher than 5,000 followers.
# Manually worked on 'liberal_set.txt' and 'conservative_set.txt' to remove users with certain screen_names
finalUserList.twitusers(liberal_set)    # returns output 'liberal_set.txt'
finalUserList.twitusers(conservative_set)   # returns output 'conservative_set.txt'


# Step 3: Get 'pure' tweets (i.e., without retweets) generated by each user in the list
collect_tweets.collect_tweets('liberal_set')    # this results in a new folder '.\result\liberal_set', under which many (userid).txt files with 'pure' tweets are saved.
collect_tweets.collect_tweets('conservative_set')   # this results in a new folder '.\result\conservative_set.'


# Step 4: Analyses
lib_sentences = analysis.corpus_opener('liberal_set')
con_sentences = analysis.corpus_opener('conservative_set')
print("liberal: " + str(len(lib_sentences)))
print("conservative: " + str(len(con_sentences)))

# for RQ1 and RQ2: differences in the use of honorific stylistics by political orientation, and by addressee-specificity
lib_final_df = analysis.kor_honorific(lib_sentences[:259706], group = 'liberal')
con_final_df = analysis.kor_honorific(con_sentences[:45625], group='conservative')


# for RQ3: differences in message topics by political orientation
lib_final_dict = analysis.kor_nouns(lib_sentences[:259706], group = 'liberal_noun')
con_final_dict = analysis.kor_nouns(con_sentences[:45625], group='conservative_noun')
